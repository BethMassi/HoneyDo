@using Shared.Models
@using Shared.Interfaces
@using Shared.Services
@using Microsoft.AspNetCore.Components.QuickGrid
@inject ILocalStorage LocalStorage
@inject NavigationManager NavigationManager


@if (honeyDos == null || honeyDos.Count() == 0)
{
    <p>No tasks due. Enjoy the day! 😎</p>
}
<QuickGrid Items="@honeyDos" class="quickgrid">
@{#if ANDROID || IOS || WINDOWS || MACCATALYST }
    <TemplateColumn>
        <img class="img-thumbnail" style="width:100px" src="@context.Image" alt="Card image">
        <div class="click-area" @onclick="() => Edit(context)"></div>
    </TemplateColumn>
@{#endif}
    <TemplateColumn Title="Task" Sortable="true">
        <div class="@GetTaskColor(context)">@context.Task</div>
        <div class="click-area" @onclick="() => Edit(context)"></div>
    </TemplateColumn>
    <PropertyColumn Property="@(item => item.DueDate)" Format="yyyy-MM-dd" Sortable="true" />
     <TemplateColumn Title="Complete?">
        <input type="checkbox" @bind="@context.IsComplete" @onclick="() => Complete(context)" />
    </TemplateColumn>
    <PropertyColumn Property="@(item => item.Description)" Sortable="true"/>
    <PropertyColumn Property="@(item => item.AssignedTo)" Sortable="true"/>
</QuickGrid>

@code {
    [Parameter]
    public IQueryable<Shared.Models.HoneyDoModel>? honeyDos { get; set; }

    private void Edit(HoneyDoModel model)
    {
        NavigationManager.NavigateTo($"/edit/{model.Id}");
    }

    private void Save()
    {
        HoneyDoService.SaveModel(LocalStorage);
    }

    private void Complete(HoneyDoModel model)
    {
        model.IsComplete = !model.IsComplete;
        Save();
    }

    public string GetTaskColor(HoneyDoModel honeyDo)
    {
        if (honeyDo.IsComplete)
        {
            return " text-secondary";
        }
        else if (honeyDo.DueDate.Date < DateTime.Now.Date)
        {
            return " text-danger";
        }
        else
        {
            return "";
        }
    }
}
